# Pass in the server.port value from env var, else default to 8081
server.port=${SERVER_PORT:8081}

# H2 database init
database=h2
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.schema=classpath*:db/${database}/schema.sql
#spring.datasource.data=classpath*:db/${database}/data.sql
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
spring.jpa.hibernate.ddl-auto=create

# Logging
logging.level.org.springframework=INFO
logging.level.org.springframework.web=DEBUG
logging.level.com.ktully.appd.otel.itemapi.Controller=DEBUG

# OpenTelemetry Spring/SpringBoot Instrumentation Configs

# Start by just using the logging exporter

## Set Tracer name
opentelemetry.trace.tracer.name=auto-item-api-tracer
opentelemetry.trace.tracer.samplerProbability=1

## Default configurations
#opentelemetry.trace.web.enabled=true
#opentelemetry.trace.httpclients.enabled=true
#opentelemetry.trace.tracer.samplingProbablity=1
#opentelemetry.trace.exporter.loggin.enabled=true
#opentelemetry.trace.aspects.enabled=true

## Default exporter configurations
#opentelemetry.trace.exporters.otlp.servicename=unknown
#opentelemetry.trace.exporters.otlp.endpoint=localhost:55680
#opentelemetry.trace.exporters.otlp.spantimeout=1s
#opentelemetry.trace.exporters.jaeger.servicename=unknown
#opentelemetry.trace.exporters.jaeger.endpoint=localhost:14250
#opentelemetry.trace.exporters.jaeger.spantimeout=1s
#opentelemetry.trace.exporters.zipkin.servicename=unknown
#opentelemetry.trace.exporters.zipkin.endpoint=http://localhost:9411/api/v2/spans